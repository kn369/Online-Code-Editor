import {
  require_react
} from "./chunk-YZZKIYU7.js";
import {
  __toESM
} from "./chunk-LQ2VYIYD.js";

// node_modules/react-text-gradients/lib/esm/components/LinearGradient.js
var React2 = __toESM(require_react());

// node_modules/react-text-gradients/lib/esm/helpers/transformGradient.js
var directions = [
  "to left",
  "to top left",
  "to bottom left",
  "to right",
  "to top right",
  "to bottom right",
  "to top",
  "to bottom"
];
var defaultStyles = {
  WebkitBackgroundClip: "text",
  WebkitTextFillColor: "transparent",
  WebkitBoxDecorationBreak: "clone"
};
var genDefaultStyle = (fallbackColor) => fallbackColor ? { ...defaultStyles, backgroundColor: fallbackColor } : defaultStyles;
var toRadialStyle = (gradient, fallbackColor) => {
  if (!Array.isArray(gradient))
    throw new Error(`Expected gradient to be of type (gradient={[<color values>]), got '${gradient}'`);
  return {
    ...genDefaultStyle(fallbackColor),
    backgroundImage: `radial-gradient(${gradient})`
  };
};
var toLinearStyle = (gradient, fallbackColor) => {
  const [dir, colors] = gradient;
  const direction = directions.includes(dir) ? dir : null;
  if (!direction)
    throw new Error(`Expected gradient to be of type (gradient={["<direction>", [<color values>]]), got '${gradient}'`);
  return {
    ...genDefaultStyle(fallbackColor),
    backgroundImage: `linear-gradient(${direction}, ${colors})`
  };
};
var toGradientStyle = (gradient, gradientType, fallbackColor) => {
  if (gradientType === "radial")
    return toRadialStyle(gradient, fallbackColor);
  if (gradientType === "linear")
    return toLinearStyle(gradient, fallbackColor);
};

// node_modules/react-text-gradients/lib/esm/components/Span.js
var React = __toESM(require_react());
var Span = ({ children, ...rest }) => React.createElement("span", { ...rest }, children);

// node_modules/react-text-gradients/lib/esm/components/LinearGradient.js
var LinearGradient = ({ children, gradient, fallbackColor, ...rest }) => {
  const style = {
    ...toGradientStyle(gradient, "linear", fallbackColor),
    ...rest.style
  };
  return React2.createElement(Span, { ...rest, style }, children);
};

// node_modules/react-text-gradients/lib/esm/components/RadialGradient.js
var React3 = __toESM(require_react());
var RadialGradient = ({ children, gradient, fallbackColor, ...rest }) => {
  const style = {
    ...toGradientStyle(gradient, "radial", fallbackColor),
    ...rest.style
  };
  return React3.createElement(Span, { ...rest, style }, children);
};
export {
  LinearGradient,
  RadialGradient
};
//# sourceMappingURL=react-text-gradients.js.map
