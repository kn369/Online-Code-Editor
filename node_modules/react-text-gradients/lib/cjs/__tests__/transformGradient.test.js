"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("@testing-library/jest-dom");
const helpers_1 = require("../helpers");
describe('transformGradient function', () => {
    test.each(helpers_1.directions)('should transform linear gradient into valid inline css', dir => {
        const style = (0, helpers_1.toGradientStyle)([dir, '#fff, #000'], 'linear', 'black');
        expect(style).toStrictEqual({
            ...helpers_1.defaultStyles,
            backgroundColor: 'black',
            backgroundImage: `linear-gradient(${dir}, #fff, #000)`,
        });
    });
    test('should transform radial gradient into valid inline css', () => {
        const style = (0, helpers_1.toGradientStyle)(['#fff, #000'], 'radial', 'black');
        expect(style).toStrictEqual({
            ...helpers_1.defaultStyles,
            backgroundColor: 'black',
            backgroundImage: `radial-gradient(#fff, #000)`,
        });
    });
    test('should transform radial gradient into valid inline css using no fallback color', () => {
        const style = (0, helpers_1.toGradientStyle)(['#fff, #000'], 'radial');
        expect(style).toStrictEqual({
            ...helpers_1.defaultStyles,
            backgroundImage: `radial-gradient(#fff, #000)`,
        });
    });
});
describe('toLinearStyle function', () => {
    test('toLinearStyle should fail', () => {
        expect(() => {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            (0, helpers_1.toLinearStyle)(['', '']);
        }).toThrow();
    });
});
describe('toRadialStyle function', () => {
    test('toRadialStyle should fail', () => {
        expect(() => {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            (0, helpers_1.toRadialStyle)('');
        }).toThrow();
    });
});
//# sourceMappingURL=transformGradient.test.js.map